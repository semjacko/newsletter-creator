{"version":3,"sources":["assets/lang.js","components/help.js","screens/images.js","screens/home.js","components/newsletter-view.js","screens/width-picker.js","screens/links.js","screens/settings.js","screens/save.js","components/newsletter-controller.js","app.js","assets/constants.js","index.js"],"names":["TRANSLATIONS","LANGUAGES","Help","props","style","Whisper","trigger","placement","speaker","Popover","title","children","Icon","icon","size","color","loadImage","file","Promise","resolve","reject","img","Image","onload","onerror","name","src","window","URL","createObjectURL","Images","onNext","language","uploaderRef","useRef","onDropzoneChange","files","a","images","f","blobFile","push","sort","b","toLowerCase","current","state","fileList","className","Uploader","ref","draggable","accept","multiple","fileListVisible","shouldUpload","onChange","lineHeight","width","position","top","left","alt","margin","Home","Button","appearance","onClick","NL_HEADER","fontSize","NL_FOOTER","NewsletterView","links","backgroundColor","textColor","imageHighlights","showHeaderAndFooter","maxWidth","maxHeight","rows","i","length","currWidth","currRow","coeff","height","background","backgroundSize","fontWeight","border","display","marginTop","overflowY","overflowX","alignItems","justifyContent","padding","flexDirection","WidthPicker","widths","onBack","useState","selected","setSelected","radioWidths","w","Radio","value","toString","RadioGroup","defaultValue","ButtonGroup","LinkInputs","nInputs","defaultValues","setLinks","values","setValues","inputs","InputGroup","Addon","Input","placeholder","text","newValues","texts","split","j","trim","Links","defaultLinks","Settings","defaultTitle","defaultTextColor","defaultBackgroundColor","setTitle","setTextColor","setBackgroundColor","Divider","Chrome","disableAlpha","hex","Save","onSave","zip","require","zipUtils","tryWidth","currRowWidth","getDataFromUrl","url","getBinaryContent","err","data","createZip","html","imgFolder","folder","String","padStart","binary","generateAsync","type","then","content","saveAs","App","currentStep","setCurrentStep","setImages","setWidths","selectedWidth","setSelectedWidth","setLanguage","SelectPicker","cleanable","searchable","right","renderValue","Steps","vertical","Item","detectedWidths","detectWidths","Alert","error","map","e","nImages","rowWidth","NEWSLETTER_HTML","createNL","beautifulHTML","prettier","ReactDOM","render","document","getElementById"],"mappings":"0PAAMA,EAAe,CACjB,GAAM,CACF,WAAc,kBACd,QAAW,SACX,OAAU,aACV,WAAc,sBACd,YAAe,yBACf,YAAe,8CACf,WAAc,uBACd,YAAe,oBACf,eAAkB,yBAClB,SAAY,WACZ,KAAQ,aACR,KAAQ,eACR,KAAQ,mBACR,SAAY,aACZ,MAAS,WACT,SAAY,gBACZ,WAAc,cACd,iBAAoB,wBACpB,kBAAqB,qHACrB,yBAA4B,kEAC5B,oBAAuB,mFACvB,4BAA+B,+HAC/B,mBAAsB,iHACtB,eAAkB,kDAClB,kBAAqB,sIACrB,2BAA8B,2HAC9B,cAAiB,iEACjB,sBAAyB,oEAE7B,GAAM,CACF,WAAc,cACd,QAAW,UACX,OAAU,SACV,WAAc,iBACd,YAAe,cACf,YAAe,mCACf,WAAc,aACd,YAAe,cACf,eAAkB,iBAClB,SAAY,WACZ,KAAQ,OACR,KAAQ,OACR,KAAQ,OACR,SAAY,WACZ,MAAS,QACT,SAAY,mBACZ,WAAc,aACd,iBAAoB,mBACpB,kBAAqB,4EACrB,yBAA4B,2CAC5B,oBAAuB,0DACvB,4BAA+B,qFAC/B,mBAAsB,yEACtB,eAAkB,8BAClB,kBAAqB,kHACrB,2BAA8B,6HAC9B,cAAiB,4CACjB,sBAAyB,4CAI3BC,EAAY,CACd,CACE,MAAS,KACT,MAAS,aAEX,CACE,MAAS,KACT,MAAS,Y,2CCnETC,EAAO,SAACC,GACV,OACI,qBAAKC,MAAOD,EAAMC,MAAlB,SACI,cAACC,EAAA,EAAD,CACIC,QAAS,QACTC,UAAW,OACXC,QACI,cAACC,EAAA,EAAD,CAASC,MAAOP,EAAMO,MAAtB,SAA8BP,EAAMQ,WAJ5C,SAOI,cAACC,EAAA,EAAD,CAAMC,KAAM,kBAAmBC,KAAK,KAAKV,MAAO,CAACW,MAAO,kBCRlEC,EAAY,SAACC,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAM,IAAIC,MAChBD,EAAIE,OAAS,kBAAMJ,EAAQE,IAC3BA,EAAIG,QAAUJ,EACZC,EAAII,KAAOR,EAAKQ,KAChBJ,EAAIK,IAAMC,OAAOC,IAAIC,gBAAgBZ,OAInCa,EAAS,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACjBC,EAAcC,iBAAO,MAErBC,EAAgB,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sDAEnBC,EAAS,GAFU,cAGPF,GAHO,gEAGZG,EAHY,aAIrBD,EAJqB,SAIHtB,EAAUuB,EAAEC,UAJT,wBAIdC,KAJc,+JAMvBH,EAAOI,MAAK,SAACL,EAAGM,GACd,OAAON,EAAEZ,KAAKmB,cAAgBD,EAAElB,KAAKmB,eAAiB,EAAI,KAE5DX,EAAYY,QAAQC,MAAMC,SAAW,GACrChB,EAAOO,GAVgB,gEAAH,sDAatB,OACI,sBAAKU,UAAW,qFAAhB,UACE,qBAAKA,UAAW,wDAAhB,SACE,6BAAKhD,EAAagC,GAAb,WAEP,qBAAKgB,UAAW,yDAAhB,SACE,cAACC,EAAA,EAAD,CACEC,IAAKjB,EACLkB,WAAW,EACXC,OAAQ,UACRC,UAAU,EACVC,iBAAiB,EACjBC,aAAc,kBAAI,GAClBC,SAAUrB,EAPZ,SASE,qBAAK/B,MAAO,CAACqD,WAAY,QAASC,MAAO,KAAzC,SAAgD1D,EAAagC,GAAb,kBAGpD,eAAC,EAAD,CAAMtB,MAAOV,EAAagC,GAAb,iBAA4C5B,MAAO,CAACuD,SAAU,WAAYC,IAAK,GAAIC,KAAM,IAAtG,UACE,4BAAI7D,EAAagC,GAAb,oBACJ,4BAAIhC,EAAagC,GAAb,2BACJ,qBAAKN,IAAK,wBAAyBoC,IAAK,qBAAsB1D,MAAO,CAACsD,MAAO,IAAKK,OAAQ,a,SChD9FC,EAAO,SAAC,GAAwB,IAAvBjC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACnB,OACI,sBAAKgB,UAAW,oEAAhB,UACI,sBAAKA,UAAW,yEAAhB,UACI,oDACA,cAACiB,EAAA,EAAD,CAAQC,WAAY,OAAQpD,KAAM,KAAMqD,QAASpC,EAAQiB,UAAW,MAApE,SAA4EhD,EAAagC,GAAb,gBAEhF,qBAAKgB,UAAW,iCAAhB,SACI,iCAAOhD,EAAagC,GAAb,QAAP,mB,2BCVVoC,EAAY,kBAAM,oBAAGhE,MAAO,CAACiE,SAAU,IAArB,gFAA+E,6CAA/E,QAClBC,EAAY,kBAAM,qCAAE,mBAAGlE,MAAO,CAACiE,SAAU,IAArB,6DAAkE,mBAAGjE,MAAO,CAACiE,SAAU,IAArB,uHAEtFE,EAAiB,SAAC,GAAmH,IAAlHjC,EAAiH,EAAjHA,OAAeoB,GAAkG,EAAzGc,MAAyG,EAAlGd,OAAOe,EAA2F,EAA3FA,gBAAiBC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,gBAAiBC,EAA8C,EAA9CA,oBAAqBC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UACvH,IAAKpB,EACD,OAAO,KAMX,IAHA,IAAIqB,EAAO,GACPC,EAAI,EAEDA,EAAI1C,EAAO2C,QAAQ,CAKtB,IAJA,IAAIC,EAAY,EACZC,EAAU,GACVC,GAASP,EAAW,IAAMnB,EAEvBwB,EAAYxB,GACfwB,GAAa5C,EAAO0C,GAAGtB,MACvByB,EAAQ1C,KACJ,qBAAarC,MAAO,CAACuD,SAAU,WAAYD,MAAOpB,EAAO0C,GAAGtB,MAAQ0B,EAAOC,OAAQ/C,EAAO0C,GAAGK,OAASD,EAAOE,WAAW,OAAD,OAAShD,EAAO0C,GAAGtD,IAAnB,KAA2B6D,eAAgB,SAAlK,SACMZ,GACE,qBAAKvE,MAAO,CAACuD,SAAU,WAAYC,IAAK,EAAGC,KAAM,EAAGH,MAAO,OAAQ2B,OAAQ,OAAQtE,MAAO,UAAWyE,WAAY,OAAQC,OAAQ,aAAjI,SACKT,EAAE,KAHLA,IAQdA,IAEJD,EAAKtC,KAAK,qBAAarC,MAAO,CAACsD,MAAOmB,EAAW,GAAIa,QAAS,QAApD,SAA8DP,GAApDH,IAGxB,OACI,sBAAKhC,UAAU,SAAS5C,MAAO,CAACuF,UAAW,GAAIb,UAAWA,EAAWD,SAAUA,EAAUe,UAAW,OAAQC,UAAW,UAAvH,UACKjB,GACG,qBAAKxE,MAAO,CAACsD,MAAOmB,EAAW,GAAIJ,gBAAiBA,EAAiB1D,MAAO2D,EAAWgB,QAAS,OAAQI,WAAY,SAAUC,eAAgB,SAAUC,QAAS,IAAjK,SACI,cAAC,EAAD,MAGPjB,EACAH,GACG,qBAAKxE,MAAO,CAACsD,MAAOmB,EAAW,GAAIJ,gBAAiBA,EAAiB1D,MAAO2D,EAAWgB,QAAS,OAAQI,WAAY,SAAUC,eAAgB,SAAUE,cAAc,SAAUD,QAAS,IAAzL,SACI,cAAC,EAAD,UCtCdE,EAAc,SAAC,GAAgD,IAA/C5D,EAA8C,EAA9CA,OAAQ6D,EAAsC,EAAtCA,OAAQpE,EAA8B,EAA9BA,OAAQqE,EAAsB,EAAtBA,OAAQpE,EAAc,EAAdA,SAClD,EAAgCqE,mBAASF,EAAO,IAAhD,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,GAAIJ,EAAOlB,QAAU,EAEjB,OADAmB,IACO,KAGX,IARgE,EAQ5DI,EAAc,GAR8C,cASlDL,GATkD,IAShE,2BAAsB,CAAC,IAAdM,EAAa,QAClBD,EAAY/D,KAAK,eAACiE,EAAA,EAAD,CAA0BC,MAAOF,EAAjC,UAAqCA,EAArC,OAAYA,EAAEG,cAV6B,8BAahE,OACI,sBAAK5D,UAAW,qFAAhB,UACI,sBAAKA,UAAW,yDAAhB,UACI,sBAAKA,UAAW,wCAAhB,UACI,qBAAKA,UAAW,wDAAhB,SACI,6BAAKhD,EAAagC,GAAb,eAET,qBAAKgB,UAAW,sBAAhB,SACI,cAAC6D,EAAA,EAAD,CACI7D,UAAW,+DACXvB,KAAM,YACNyC,WAAY,SACZ4C,aAAcX,EAAO,GACrB3C,SAAU,SAACmD,GAAWJ,EAAYI,IALtC,SAMKH,SAIb,qBAAKxD,UAAW,+DAAhB,SACI,cAAC,EAAD,CAAgBV,OAAQA,EAAQqC,iBAAiB,EAAMjB,MAAO4C,EAAUzB,SAAU,IAAKC,UAAW,WAG1G,qBAAK9B,UAAW,wDAAhB,SACI,eAAC+D,EAAA,EAAD,WACI,cAAC9C,EAAA,EAAD,CAAQC,WAAY,QAASlB,UAAW,QAASmB,QAASiC,EAA1D,SAAmEpG,EAAagC,GAAb,OACnE,cAACiC,EAAA,EAAD,CAAQC,WAAY,UAAWlB,UAAW,QAASmB,QAAS,kBAAMpC,EAAOuE,IAAzE,SAAqFtG,EAAagC,GAAb,YAG7F,eAAC,EAAD,CAAMtB,MAAOV,EAAagC,GAAb,WAAsC5B,MAAO,CAACuD,SAAU,WAAYC,IAAK,GAAIC,KAAM,IAAhG,UACI,4BAAI7D,EAAagC,GAAb,sBACJ,4BAAIhC,EAAagC,GAAb,8BACJ,4BAAIhC,EAAagC,GAAb,4B,2BC5CdgF,EAAa,SAAC,GAIhB,IAJkE,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,SAAUnF,EAAc,EAAdA,SACnD,EAA4BqE,mBAASa,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEIC,EAAS,GAHoD,WAIxDtC,GACLsC,EAAO7E,KACH,eAAC8E,EAAA,EAAD,CAAoBvE,UAAW,QAA/B,UACI,eAACuE,EAAA,EAAWC,MAAZ,eAAoBxC,EAAE,KACtB,cAACyC,EAAA,EAAD,CACId,MAAOS,EAAOpC,GACd0C,YAAW,UAAK1H,EAAagC,GAAb,WAAL,aAA8CgD,EAAE,GAC3DxB,SAAU,SAACmE,GAGP,IAFA,IAAIC,EAAS,YAAOR,GAChBS,EAAQF,EAAKG,MAAM,OACdC,EAAI,EAAGA,EAAIF,EAAM5C,QAAU8C,EAAI/C,EAAIiC,EAASc,IACjDH,EAAU5C,EAAI+C,GAAKF,EAAME,GAAGC,OAEhCX,EAAUO,GACVT,EAASS,QAZJ5C,KAFhBA,EAAI,EAAGA,EAAIiC,EAASjC,IAAM,EAA1BA,GAoBT,OAAOsC,GAGLW,EAAQ,SAAC,GAA6D,IAA5D3F,EAA2D,EAA3DA,OAAQ4F,EAAmD,EAAnDA,aAAcxE,EAAqC,EAArCA,MAAO3B,EAA8B,EAA9BA,OAAQqE,EAAsB,EAAtBA,OAAQpE,EAAc,EAAdA,SACzD,EAA0BqE,mBAAS6B,GAAnC,mBAAO1D,EAAP,KAAc2C,EAAd,KAEA,OACI,sBAAKnE,UAAW,qFAAhB,UACI,sBAAKA,UAAW,yDAAhB,UACI,sBAAKA,UAAW,wCAAhB,UACI,qBAAKA,UAAW,wDAAhB,SACI,6BAAKhD,EAAagC,GAAb,gBAET,qBAAKgB,UAAW,sBAAhB,SACI,cAAC,EAAD,CAAYiE,QAAS3E,EAAO2C,OAAQiC,cAAegB,EAAcf,SAAUA,EAAUnF,SAAUA,SAGvG,qBAAKgB,UAAW,+DAAhB,SACI,cAAC,EAAD,CAAgBV,OAAQA,EAAQqC,iBAAiB,EAAMjB,MAAOA,EAAOmB,SAAU,IAAKC,UAAW,WAGvG,qBAAK9B,UAAW,wDAAhB,SACI,eAAC+D,EAAA,EAAD,WACI,cAAC9C,EAAA,EAAD,CAAQC,WAAY,QAASlB,UAAW,QAASmB,QAASiC,EAA1D,SAAmEpG,EAAagC,GAAb,OACnE,cAACiC,EAAA,EAAD,CAAQC,WAAY,UAAWlB,UAAW,QAASmB,QAAS,kBAAMpC,EAAOyC,IAAzE,SAAkFxE,EAAagC,GAAb,YAG1F,eAAC,EAAD,CAAMtB,MAAOV,EAAagC,GAAb,YAAuC5B,MAAO,CAACuD,SAAU,WAAYC,IAAK,GAAIC,KAAM,IAAjG,UACI,4BAAI7D,EAAagC,GAAb,iBACJ,4BAAIhC,EAAagC,GAAb,oBACJ,qBAAKN,IAAK,yBAA0BoC,IAAK,aAAc1D,MAAO,CAACsD,MAAO,IAAKK,OAAQ,a,kBCrD7FoE,EAAW,SAAC,GAAuG,IAAtG7F,EAAqG,EAArGA,OAAQoB,EAA6F,EAA7FA,MAAO0E,EAAsF,EAAtFA,aAAcC,EAAwE,EAAxEA,iBAAkBC,EAAsD,EAAtDA,uBAAwBvG,EAA8B,EAA9BA,OAAQqE,EAAsB,EAAtBA,OAAQpE,EAAc,EAAdA,SACtG,EAA0BqE,mBAAS+B,GAAnC,mBAAO1H,EAAP,KAAc6H,EAAd,KACA,EAAkClC,mBAASgC,GAA3C,mBAAO3D,EAAP,KAAkB8D,EAAlB,KACA,EAA8CnC,mBAASiC,GAAvD,mBAAO7D,EAAP,KAAwBgE,EAAxB,KAMA,OACI,sBAAKzF,UAAW,qFAAhB,UACI,sBAAKA,UAAW,yDAAhB,UACI,sBAAKA,UAAW,wCAAhB,UACI,qBAAKA,UAAW,wDAAhB,SACI,6BAAKhD,EAAagC,GAAb,aAET,sBAAKgB,UAAW,sBAAhB,UACI,cAAC0F,EAAA,EAAD,CAAS1F,UAAW,QAApB,SAA8BhD,EAAagC,GAAb,QAC9B,eAACuF,EAAA,EAAD,WACI,cAACA,EAAA,EAAWC,MAAZ,UAAmBxH,EAAagC,GAAb,QACnB,cAACyF,EAAA,EAAD,CAAOd,MAAOjG,EAAO8C,SAbvB,SAACmE,GAAD,OAAUY,EAASZ,SAerB,cAACe,EAAA,EAAD,CAAS1F,UAAW,QAApB,SAA8BhD,EAAagC,GAAb,WAC9B,qBAAKgB,UAAW,gCAAhB,SACI,cAAC2F,EAAA,EAAD,CAAcC,cAAY,EAACpF,SAlBf,SAAC,GAAD,IAAGqF,EAAH,EAAGA,IAAH,OAAaJ,EAAmBI,IAkBwB9H,MAAO0D,MAE/E,cAACiE,EAAA,EAAD,CAAS1F,UAAW,QAApB,SAA8BhD,EAAagC,GAAb,aAC9B,qBAAKgB,UAAW,gCAAhB,SACI,cAAC2F,EAAA,EAAD,CAAcC,cAAY,EAACpF,SAvBrB,SAAC,GAAD,IAAGqF,EAAH,EAAGA,IAAH,OAAaL,EAAaK,IAuB8B9H,MAAO2D,YAIjF,qBAAK1B,UAAW,+DAAhB,SACI,cAAC,EAAD,CAAgBV,OAAQA,EAAQoB,MAAOA,EAAOkB,qBAAqB,EAAMH,gBAAiBA,EAAiBC,UAAWA,EAAWG,SAAU,IAAKC,UAAW,WAGnK,qBAAK9B,UAAW,wDAAhB,SACI,eAAC+D,EAAA,EAAD,WACI,cAAC9C,EAAA,EAAD,CAAQC,WAAY,QAASlB,UAAW,QAASmB,QAASiC,EAA1D,SAAmEpG,EAAagC,GAAb,OACnE,cAACiC,EAAA,EAAD,CAAQC,WAAY,UAAWlB,UAAW,QAASmB,QAAS,kBAAMpC,EAAOrB,EAAOgE,EAAWD,IAA3F,SAA8GzE,EAAagC,GAAb,YAGtH,cAAC,EAAD,CAAMtB,MAAOV,EAAagC,GAAb,SAAoC5B,MAAO,CAACuD,SAAU,WAAYC,IAAK,GAAIC,KAAM,IAA9F,SACI,4BAAI7D,EAAagC,GAAb,mCC5Cd8G,EAAO,SAAC,GAAkF,IAAjFxG,EAAgF,EAAhFA,OAAQoB,EAAwE,EAAxEA,MAAcgB,GAA0D,EAAjEF,MAAiE,EAA1DE,WAAWD,EAA+C,EAA/CA,gBAAiBsE,EAA8B,EAA9BA,OAAQ3C,EAAsB,EAAtBA,OAAQpE,EAAc,EAAdA,SAC7E,OACI,sBAAKgB,UAAW,qFAAhB,UACI,qBAAKA,UAAW,wDAAhB,SACI,6BAAKhD,EAAagC,GAAb,aAET,qBAAKgB,UAAW,yDAAhB,SACI,cAAC,EAAD,CAAgBV,OAAQA,EAAQsC,qBAAqB,EAAMH,gBAAiBA,EAAiBC,UAAWA,EAAWhB,MAAOA,EAAOmB,SAAU,IAAKC,UAAW,QAE/J,qBAAK9B,UAAW,wDAAhB,SACI,eAAC+D,EAAA,EAAD,WACI,cAAC9C,EAAA,EAAD,CAAQC,WAAY,QAASlB,UAAW,QAASmB,QAASiC,EAA1D,SAAmEpG,EAAagC,GAAb,OACnE,cAACiC,EAAA,EAAD,CAAQC,WAAY,UAAWlB,UAAW,QAASmB,QAAS,kBAAM4E,KAAlE,SAA6E/I,EAAagC,GAAb,YAGrF,eAAC,EAAD,CAAMtB,MAAOV,EAAagC,GAAb,SAAoC5B,MAAO,CAACuD,SAAU,WAAYC,IAAK,GAAIC,KAAM,IAA9F,UACI,4BAAI7D,EAAagC,GAAb,gBACJ,4BAAIhC,EAAagC,GAAb,+B,SCrBdgH,EAAMC,EAAQ,IAARA,GACNC,EAAWD,EAAQ,KAEnBE,EAAW,SAACzF,EAAOpB,GAGrB,IAFA,IAAI0C,EAAI,EAEDA,EAAI1C,EAAO2C,QAAQ,CAKtB,IAJA,IAAImE,EAAe,EACfrB,EAAI/C,EAGD+C,EAAIzF,EAAO2C,QAAUmE,EAAe1F,GAAO,CAG9C,GAFA0F,GAAgB9G,EAAOyF,GAAGrE,MAEtBqE,EAAI/C,GAAK1C,EAAOyF,GAAG1C,SAAW/C,EAAOyF,EAAE,GAAG1C,OAC1C,OAAO,EAEX0C,IAKJ,GAFA/C,EAAI+C,EAEAqB,IAAiB1F,EACjB,OAAO,EAKf,OAAO,GAiEL2F,EAAiB,SAACC,GACvB,OAAO,IAAIpI,SAAQ,SAACC,EAASC,GAC5B8H,EAASK,iBAAiBD,GAAK,SAACE,EAAKC,GACjCD,EACFpI,EAAOoI,GAEPrI,EAAQsI,UAMNC,EAAS,uCAAG,WAAOC,EAAMrH,GAAb,mBAAAD,EAAA,sDACjB2G,EAAI/H,KAAK,aAAc0I,GAChBC,EAAYZ,EAAIa,OAAO,UAElB7E,EAAI,EAJC,YAIEA,EAAI1C,EAAO2C,QAJb,iCAKCoE,EAAe/G,EAAO0C,GAAGtD,KAL1B,OAKZ+H,EALY,OAMhBG,EAAU3I,KAAV,eAAwB6I,OAAO9E,EAAE,GAAG+E,SAAS,EAAG,KAAhD,QAA4DN,EAAM,CAACO,QAAO,IAN1D,OAIqBhF,IAJrB,uBASdgE,EAAIiB,cAAc,CAACC,KAAK,SAASC,MAAK,SAACC,GACzCC,iBAAOD,EAAS,qBAVA,4CAAH,wDC/FA,SAASE,IACtB,MAAsCjE,oBAAU,GAAhD,mBAAOkE,EAAP,KAAoBC,EAApB,KACA,EAA4BnE,mBAAS,IAArC,mBAAO/D,EAAP,KAAemI,EAAf,KACA,EAA0BpE,mBAAS,IAAnC,mBAAO7B,EAAP,KAAc2C,EAAd,KACA,EAA4Bd,mBAAS,GAArC,mBAAOF,EAAP,KAAeuE,EAAf,KACA,EAA0CrE,mBAAS,IAAnD,mBAAOsE,EAAP,KAAsBC,EAAtB,KACA,EAA0BvE,mBCjBN,4BDiBpB,mBAAO3F,EAAP,KAAc6H,EAAd,KACA,EAAkClC,mBCjBT,WDiBzB,mBAAO3B,EAAP,KAAkB8D,EAAlB,KACA,EAA8CnC,mBCjBf,WDiB/B,mBAAO5B,EAAP,KAAwBgE,EAAxB,KACA,EAAgCpC,mBCrBT,MDqBvB,mBAAOrE,EAAP,KAAiB6I,EAAjB,KAuCMzE,EAAS,WACboE,EAAeD,EAAc,IAG/B,OACE,sBAAKvH,UAAW,MAAhB,UACE,cAAC8H,EAAA,EAAD,CACEnE,MAAO3E,EACPyH,KAAMxJ,EACN8K,WAAW,EACXC,YAAY,EACZxH,SAAU,SAACmD,GAAWkE,EAAYlE,IAClCzC,WAAY,SACZ9D,MAAO,CAAEuD,SAAU,WAAYsH,MAAO,GAAIrH,IAAK,GAC/CsH,YAAa,SAACvE,GAAD,OAAW,qBAAKjF,IAAG,kBAAaiF,EAAb,QAA0BtB,OAAQ,GAAIvB,IAAG,UAAK6C,SAE7D,IAAjB4D,EACF,cAAC,EAAD,CACExI,OAAQ,WACNyI,EAAeD,EAAc,IAE/BvI,SAAUA,IAGZ,eAACmJ,EAAA,EAAD,CAAOtI,QAAS0H,EAAaa,UAAU,EAAMpI,UAAW,yCAAxD,UACE,cAACmI,EAAA,EAAME,KAAP,CAAY3K,MAAOV,EAAagC,GAAb,cACnB,cAACmJ,EAAA,EAAME,KAAP,CAAY3K,MAAOV,EAAagC,GAAb,aACnB,cAACmJ,EAAA,EAAME,KAAP,CAAY3K,MAAOV,EAAagC,GAAb,cACnB,cAACmJ,EAAA,EAAME,KAAP,CAAY3K,MAAOV,EAAagC,GAAb,iBACnB,cAACmJ,EAAA,EAAME,KAAP,CAAY3K,MAAOV,EAAagC,GAAb,cAEH,IAAhBuI,EAEA,cAAC,EAAD,CACExI,OAvEa,SAACO,GACpB,IAAIgJ,EDSa,SAAChJ,GASlB,IAJA,IAAIoB,EAAQ,EACRyC,EAAS,GACTnB,EAAI,EAEDA,EAAI1C,EAAO2C,QACdvB,GAASpB,EAAO0C,GAAGtB,MAGfyF,EAASzF,EAAOpB,IAChB6D,EAAO1D,KAAKiB,GAGhBsB,IAGJ,OAAOmB,EC7BcoF,CAAajJ,GAC9BgJ,EAAerG,QAAU,EAC3BuG,IAAMC,MAAM,6FAA+F,MAG7GhB,EAAUnI,GACVoI,EAAUY,GACVnE,EAAS7E,EAAOoJ,KAAI,SAAAC,GAAC,MAAI,OACzBnB,EAAeD,EAAc,KA+DvBvI,SAAUA,IAEI,IAAhBuI,EAEA,cAAC,EAAD,CACEjI,OAAQA,EACR6D,OAAQA,EACRpE,OAnEY,SAAC4E,GACnBiE,EAAiBjE,GACjB6D,EAAeD,EAAc,IAkEvBnE,OAAQA,EACRpE,SAAUA,IAEI,IAAhBuI,EAEA,cAAC,EAAD,CACEjI,OAAQA,EACR4F,aAAc1D,EACdd,MAAOiH,EACP5I,OAxEY,SAACyC,GACnB2C,EAAS3C,GACTgG,EAAeD,EAAc,IAuEvBnE,OAAQA,EACRpE,SAAUA,IAEI,IAAhBuI,EAEA,cAAC,EAAD,CACEjI,OAAQA,EACRoB,MAAOiH,EACPvC,aAAc1H,EACd2H,iBAAkB3D,EAClB4D,uBAAwB7D,EACxB1C,OA/Ee,SAACrB,EAAOgE,EAAWD,GACxC8D,EAAS7H,GACT8H,EAAa9D,GACb+D,EAAmBhE,GACnB+F,EAAeD,EAAc,IA4EvBnE,OAAQA,EACRpE,SAAUA,IAEI,IAAhBuI,EAEA,cAAC,EAAD,CACEjI,OAAQA,EACRoB,MAAOiH,EACPnG,MAAOA,EACP9D,MAAOA,EACPgE,UAAWA,EACXD,gBAAiBA,EACjBsE,OArFO,WACb,IAAIY,EDGS,SAACrH,EAAQoB,EAAOc,EAAO9D,EAAOgE,EAAWD,GAKtD,IAJA,IAAImH,EAAUtJ,EAAO2C,OACjBD,EAAI,EACJ2E,EAAI,sFAED3E,EAAI4G,GAAS,CAChBjC,GAAI,iEACJ,IAAIkC,EAAWvJ,EAAO0C,GAAGtB,MAMzB,IAJImI,EAAWnI,GACXsB,IAGGA,EAAI4G,GAAWC,GAAYnI,GAC9BiG,GAAI,OAEAnF,EAAMQ,GACN2E,GAAI,mBAAgBnF,EAAMQ,GAAtB,mCAAmD8E,OAAO9E,EAAE,GAAG+E,SAAS,EAAG,KAA3E,8BAAqGzH,EAAO0C,GAAGtB,MAA/G,yCAAqJpB,EAAO0C,GAAGtB,MAA/J,yCAEJiG,GAAI,gCAA6BG,OAAO9E,EAAE,GAAG+E,SAAS,EAAG,KAArD,8BAA+EzH,EAAO0C,GAAGtB,MAAzF,yCAA+HpB,EAAO0C,GAAGtB,MAAzI,qCAGRiG,GAAI,UACJ3E,EAEQ4G,IACJC,GAAYvJ,EAAO0C,GAAGtB,OAG9BiG,GAAI,0BAOR,OEvFoB,SAACjJ,EAAO0J,EAAS3F,EAAiBC,GAAlC,wUAE2HhE,EAF3H,8vBAQgD+D,EARhD,gGAQuJA,EARvJ,yIASmGA,EATnG,mGAU6DA,EAV7D,kBAUsFC,EAVtF,4LAWJ0F,EAXI,iOAYkC3F,EAZlC,kBAY2DC,EAZ3D,8pBFqFLoH,CAAgBpL,EAF/BiJ,GAAI,WAEwClF,EAAiBC,GCrClDqH,CAASzJ,EAAQqI,EAAenG,EAAO9D,EAAOgE,EAAWD,GAEhEuH,GAAgBC,EADLhD,EAAQ,KAAeU,MACTA,GAC7BD,EAAUsC,EAAe1J,IAkFnB8D,OAAQA,EACRpE,SAAUA,IAEZ,Q,qBEtIRkK,IAASC,OAAO,cAAC7B,EAAD,IAAS8B,SAASC,eAAe,W","file":"static/js/main.be35321e.chunk.js","sourcesContent":["const TRANSLATIONS = {\r\n    'sk': {\r\n        'lets_start': 'Začať',\r\n        'version': 'verzia',\r\n        'images': 'Obrázky',\r\n        'link_image': 'Link pre obrázok',\r\n        'drop_images': 'Vložte obrázky',\r\n        'drag_n_drop': 'Kliknite alebo Presuňte obrázky sem',\r\n        'pick_width': 'Zvolte šírku',\r\n        'paste_links': 'Vložte linky',\r\n        'final_settings': 'Posledné nastavenia',\r\n        'overview': 'Kontrola',\r\n        'next': 'Ďalej',\r\n        'back': 'Späť',\r\n        'save': 'Uložiť',\r\n        'settings': 'Nastavenia',\r\n        'title': 'Názov',\r\n        'bg_color': 'Farba pozadia',\r\n        'text_color': 'Farba textu',\r\n        'images_uploading': 'Vkladanie obrázkov',\r\n        'select_all_images': 'Označte všetky obrázky, ktoré chcete použiť a potiahnite ich do vyznačenej oblasti.',\r\n        'images_have_to_be_sorted': 'Obrázky musia byť zoradené podľa ich názvov.',\r\n        'all_possible_widths': 'Tu môžte vidieť všetky možné šírky Newslettra.',\r\n        'widths_have_been_calculated': 'Šírky boli vypočítané na základe obrázkov, ktoré ste vložili v predchádzajúcom kroku.',\r\n        'to_achieve_desired': 'Na dosiahnutie požadovaného výstupu musia byť obrázky zoradené podľa ich názvov.',\r\n        'copy_and_paste': 'Skopírujte a vložte odkazy obrázkov.',\r\n        'if_you_paste_more': 'Ak vložíte viacero odkazov (oddelených novým riadkom alebo medzerou), vyplnia sa aj nasledujúce vstupy pre odkazy.',\r\n        'choose_title_of_newsletter': 'Tu si môžte zvoliť názov Newslettra a tiež aj pozadie a farbu textu v jeho hlavičke a päte.',\r\n        'you_can_check': 'Teraz môžte skontrolovať vytvorený Newsletter.',\r\n        'if_everything_is_okay': 'Ak je všetko v poriadku, môžte ho uložiť.'\r\n    },\r\n    'en': {\r\n        'lets_start': 'Let\\'s start',\r\n        'version': 'version',\r\n        'images': 'Images',\r\n        'link_image': 'Link for image',\r\n        'drop_images': 'Drop images',\r\n        'drag_n_drop': 'Click or Drag files to this area',\r\n        'pick_width': 'Pick width',\r\n        'paste_links': 'Paste links',\r\n        'final_settings': 'Final settings',\r\n        'overview': 'Overview',\r\n        'next': 'Next',\r\n        'back': 'Back',\r\n        'save': 'Save',\r\n        'settings': 'Settings',\r\n        'title': 'Title',\r\n        'bg_color': 'Background color',\r\n        'text_color': 'Text color',\r\n        'images_uploading': 'Images uploading',\r\n        'select_all_images': 'Select all images you want to use and drag and drop them to the dropzone.',\r\n        'images_have_to_be_sorted': 'Images have to be sorted by their names.',\r\n        'all_possible_widths': 'Here you can see all possible widths of the Newsletter.',\r\n        'widths_have_been_calculated': 'Widths have been calculated based on the images you uploaded in the previous step.',\r\n        'to_achieve_desired': 'To achieve the desired output images have to be sorted by their names.',\r\n        'copy_and_paste': 'Copy and paste image links.',\r\n        'if_you_paste_more': 'If you paste more links (separated by a newline or whitespace) they will by propagated to the following inputs.',\r\n        'choose_title_of_newsletter': 'Here you can choose the title of the Newsletter and also the background color and the text color of its header and footer.',\r\n        'you_can_check': 'Now you can check the created Newsletter.',\r\n        'if_everything_is_okay': 'If everything is okay, you can save it.'\r\n    }\r\n}\r\n\r\nconst LANGUAGES = [\r\n    {\r\n      'value': 'sk',\r\n      'label': 'Slovensky'\r\n    },\r\n    {\r\n      'value': 'en',\r\n      'label': 'English'\r\n    }\r\n  ]\r\n\r\nexport { TRANSLATIONS, LANGUAGES }","import React from 'react';\r\nimport { Whisper, Popover, Icon } from 'rsuite';\r\n\r\nconst Help = (props) => {\r\n    return (\r\n        <div style={props.style}>\r\n            <Whisper\r\n                trigger={'hover'}\r\n                placement={'auto'}\r\n                speaker={\r\n                    <Popover title={props.title}>{props.children}</Popover>\r\n                }\r\n            >\r\n                <Icon icon={'question-circle'} size=\"2x\" style={{color: '#3498FF'}}/>\r\n            </Whisper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Help };","import React, { useRef } from 'react';\r\nimport { TRANSLATIONS } from '../assets/lang';\r\nimport { Uploader } from 'rsuite';\r\nimport { Help } from '../components/help';\r\n\r\nconst loadImage = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    let img = new Image();\r\n\t\timg.onload = () => resolve(img);\r\n\t\timg.onerror = reject;\r\n    img.name = file.name;\r\n    img.src = window.URL.createObjectURL(file);\r\n\t});\r\n}\r\n\r\nconst Images = ({onNext, language}) => {\r\n  const uploaderRef = useRef(null);\r\n\r\n  const onDropzoneChange = async (files) => {\r\n    // TODO subory nie su obrazky\r\n    let images = []\r\n    for (const f of files) {\r\n      images.push(await loadImage(f.blobFile));\r\n    }\r\n    images.sort((a, b) => {\r\n      return a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;\r\n    });\r\n    uploaderRef.current.state.fileList = []\r\n    onNext(images);\r\n  }\r\n\r\n  return (\r\n      <div className={'container-workspace bg-light rounded-3 shadow d-flex flex-column position-relative'}>\r\n        <div className={'h-80 d-flex justify-content-center align-items-center'}>\r\n          <h2>{TRANSLATIONS[language]['images']}</h2>\r\n        </div>\r\n        <div className={'h-560 d-flex justify-content-center align-items-center'}>\r\n          <Uploader\r\n            ref={uploaderRef}\r\n            draggable={true}\r\n            accept={'image/*'}\r\n            multiple={true}\r\n            fileListVisible={false}\r\n            shouldUpload={()=>false}\r\n            onChange={onDropzoneChange}\r\n          >\r\n            <div style={{lineHeight: '400px', width: 800}}>{TRANSLATIONS[language]['drag_n_drop']}</div>\r\n          </Uploader>\r\n        </div>\r\n        <Help title={TRANSLATIONS[language]['images_uploading']} style={{position: 'absolute', top: 10, left: 10}}>\r\n          <p>{TRANSLATIONS[language]['select_all_images']}</p>\r\n          <p>{TRANSLATIONS[language]['images_have_to_be_sorted']}</p>\r\n          <img src={'./files/dragndrop.gif'} alt={'drag and drop hint'} style={{width: 600, margin: 20}}/>\r\n        </Help>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport { Images };","import React from 'react';\r\nimport { Button } from 'rsuite';\r\nimport { TRANSLATIONS } from '../assets/lang';\r\n\r\nconst Home = ({onNext, language}) => {\r\n    return (\r\n        <div className={'container-home bg-light rounded-3 shadow mw-50 d-flex flex-column'}>\r\n            <div className={'d-flex flex-column flex-fill justify-content-center align-items-center'}>\r\n                <h2>Newsletter creator</h2>\r\n                <Button appearance={'link'} size={'lg'} onClick={onNext} className={'m-4'}>{TRANSLATIONS[language]['lets_start']}</Button>\r\n            </div>\r\n            <div className={'d-flex justify-content-end p-2'}>\r\n                <span>{TRANSLATIONS[language]['version']}: 1.1.0</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport { Home };","import React from 'react';\r\n\r\nconst NL_HEADER = () => <p style={{fontSize: 12}}>V prípade, že sa vám tento mail nezobrazuje správne, <b>kliknite sem</b>.</p>;\r\nconst NL_FOOTER = () => <><p style={{fontSize: 12}}>Tento email bol zaslaný na váš email</p><p style={{fontSize: 12}}>Prečo mi prišiel tento email? &nbsp;  Odhlásiť z noviniek &nbsp; Zmeniť nastavenia</p></>;\r\n\r\nconst NewsletterView = ({images, links, width, backgroundColor, textColor, imageHighlights, showHeaderAndFooter, maxWidth, maxHeight}) => {\r\n    if (!width) {\r\n        return null;\r\n    }\r\n\r\n    let rows = [],\r\n        i = 0;\r\n\r\n    while (i < images.length) {\r\n        let currWidth = 0,\r\n            currRow = [],\r\n            coeff = (maxWidth - 20) / width; // -20 for scrollbar\r\n\r\n        while (currWidth < width) {\r\n            currWidth += images[i].width;\r\n            currRow.push(\r\n                <div key={i} style={{position: 'relative', width: images[i].width * coeff, height: images[i].height * coeff, background: `url(${images[i].src})`, backgroundSize: 'cover'}}>\r\n                    { imageHighlights &&\r\n                        <div style={{position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', color: '#ff0ff0', fontWeight: 'bold', border: 'solid 1px'}}>\r\n                            {i+1}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n            i++;\r\n        }\r\n        rows.push(<div key={i} style={{width: maxWidth - 20, display: 'flex'}}>{currRow}</div>)\r\n    }\r\n\r\n    return (\r\n        <div className='border' style={{marginTop: 10, maxHeight: maxHeight, maxWidth: maxWidth, overflowY: 'auto', overflowX: 'hidden'}}>\r\n            {showHeaderAndFooter && \r\n                <div style={{width: maxWidth - 20, backgroundColor: backgroundColor, color: textColor, display: 'flex', alignItems: 'center', justifyContent: 'center', padding: 20}}>\r\n                    <NL_HEADER/>\r\n                </div>\r\n            }\r\n            {rows}\r\n            {showHeaderAndFooter && \r\n                <div style={{width: maxWidth - 20, backgroundColor: backgroundColor, color: textColor, display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column', padding: 20}}>\r\n                    <NL_FOOTER/>\r\n                </div>\r\n            }\r\n        </div> \r\n    );\r\n}\r\n\r\nexport { NewsletterView };","import React, { useState } from 'react';\r\nimport {RadioGroup, Radio, Button, ButtonGroup} from 'rsuite';\r\nimport { NewsletterView } from '../components/newsletter-view';\r\nimport { TRANSLATIONS } from '../assets/lang';\r\nimport { Help } from '../components/help';\r\n\r\nconst WidthPicker = ({images, widths, onNext, onBack, language}) => {\r\n    const [selected, setSelected] = useState(widths[0]);\r\n\r\n    if (widths.length <= 0) {\r\n        onBack();\r\n        return null;\r\n    }\r\n\r\n    let radioWidths = [];\r\n    for (let w of widths) {\r\n        radioWidths.push(<Radio key={w.toString()} value={w}>{w}px</Radio>)\r\n    }\r\n\r\n    return (\r\n        <div className={'container-workspace bg-light rounded-3 shadow d-flex flex-column position-relative'}>\r\n            <div className={'h-640 d-flex justify-content-center align-items-center'}>\r\n                <div className={'h-600 w-350 p-l-20 d-flex flex-column'}>\r\n                    <div className={'h-60 d-flex justify-content-center align-items-center'}>\r\n                        <h3>{TRANSLATIONS[language]['pick_width']}</h3>\r\n                    </div>\r\n                    <div className={'h-540 overflow-auto'}>\r\n                        <RadioGroup \r\n                            className={'justify-content-center align-items-center d-flex flex-column'}\r\n                            name={'radioList'} \r\n                            appearance={'picker'} \r\n                            defaultValue={widths[0]} \r\n                            onChange={(value) => {setSelected(value)}}>\r\n                            {radioWidths}\r\n                        </RadioGroup>\r\n                    </div>\r\n                </div>\r\n                <div className={'h-600 w-650 d-flex align-items-center justify-content-center'}>\r\n                    <NewsletterView images={images} imageHighlights={true} width={selected} maxWidth={600} maxHeight={600}/>\r\n                </div>\r\n            </div>\r\n            <div className={'h-60 d-flex justify-content-center align-items-center'}>\r\n                <ButtonGroup>\r\n                    <Button appearance={'ghost'} className={'w-350'} onClick={onBack}>{TRANSLATIONS[language]['back']}</Button>\r\n                    <Button appearance={'primary'} className={'w-350'} onClick={() => onNext(selected)}>{TRANSLATIONS[language]['next']}</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n            <Help title={TRANSLATIONS[language]['pick_width']} style={{position: 'absolute', top: 10, left: 10}}>\r\n                <p>{TRANSLATIONS[language]['all_possible_widths']}</p>\r\n                <p>{TRANSLATIONS[language]['widths_have_been_calculated']}</p>\r\n                <p>{TRANSLATIONS[language]['to_achieve_desired']}</p>\r\n            </Help>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport { WidthPicker };","import React, { useState } from 'react';\r\nimport { Button, Input, ButtonGroup, InputGroup } from 'rsuite';\r\nimport { NewsletterView } from '../components/newsletter-view';\r\nimport { LANGUAGES, TRANSLATIONS } from '../assets/lang';\r\nimport { Help } from '../components/help';\r\n\r\nconst LinkInputs = ({nInputs, defaultValues, setLinks, language}) => {\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    let inputs = [];\r\n    for (let i = 0; i < nInputs; i++) {\r\n        inputs.push(\r\n            <InputGroup key={i} className={'m-t-5'}>\r\n                <InputGroup.Addon>#{i+1}</InputGroup.Addon>\r\n                <Input \r\n                    value={values[i]} \r\n                    placeholder={`${TRANSLATIONS[language]['link_image']} #${i+1}`} \r\n                    onChange={(text) => {\r\n                        let newValues = [...values];\r\n                        let texts = text.split(/\\s+/);\r\n                        for (let j = 0; j < texts.length && j + i < nInputs; j++) {\r\n                            newValues[i + j] = texts[j].trim();\r\n                        }\r\n                        setValues(newValues);\r\n                        setLinks(newValues);\r\n                    }}\r\n                />\r\n            </InputGroup>\r\n        )\r\n    }\r\n    return inputs;\r\n}\r\n\r\nconst Links = ({images, defaultLinks, width, onNext, onBack, language}) => {\r\n    const [links, setLinks] = useState(defaultLinks);\r\n\r\n    return (\r\n        <div className={'container-workspace bg-light rounded-3 shadow d-flex flex-column position-relative'}>\r\n            <div className={'h-640 d-flex justify-content-center align-items-center'}>\r\n                <div className={'h-600 w-350 p-l-20 d-flex flex-column'}>\r\n                    <div className={'h-60 d-flex justify-content-center align-items-center'}>\r\n                        <h3>{TRANSLATIONS[language]['paste_links']}</h3>\r\n                    </div>\r\n                    <div className={'h-540 overflow-auto'}>\r\n                        <LinkInputs nInputs={images.length} defaultValues={defaultLinks} setLinks={setLinks} language={language}/>\r\n                    </div>\r\n                </div>\r\n                <div className={'h-600 w-650 d-flex align-items-center justify-content-center'}>\r\n                    <NewsletterView images={images} imageHighlights={true} width={width} maxWidth={600} maxHeight={600}/>\r\n                </div>\r\n            </div>\r\n            <div className={'h-60 d-flex justify-content-center align-items-center'}>\r\n                <ButtonGroup>\r\n                    <Button appearance={'ghost'} className={'w-350'} onClick={onBack}>{TRANSLATIONS[language]['back']}</Button>\r\n                    <Button appearance={'primary'} className={'w-350'} onClick={() => onNext(links)}>{TRANSLATIONS[language]['next']}</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n            <Help title={TRANSLATIONS[language]['paste_links']} style={{position: 'absolute', top: 10, left: 10}}>\r\n                <p>{TRANSLATIONS[language]['copy_and_paste']}</p>\r\n                <p>{TRANSLATIONS[language]['if_you_paste_more']}</p>\r\n                <img src={'./files/pastelinks.gif'} alt={'links hint'} style={{width: 600, margin: 20}}/>\r\n            </Help>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport { Links };","import React, { useState } from 'react';\r\nimport { Button, ButtonGroup, Input, InputGroup, Divider } from 'rsuite';\r\nimport { NewsletterView } from '../components/newsletter-view';\r\nimport { ChromePicker } from 'mp-react-color';\r\nimport { TRANSLATIONS } from '../assets/lang';\r\nimport { Help } from '../components/help';\r\n\r\nconst Settings = ({images, width, defaultTitle, defaultTextColor, defaultBackgroundColor, onNext, onBack, language}) => {\r\n    const [title, setTitle] = useState(defaultTitle);\r\n    const [textColor, setTextColor] = useState(defaultTextColor);\r\n    const [backgroundColor, setBackgroundColor] = useState(defaultBackgroundColor);\r\n\r\n    const handleTextColorChange = ({ hex }) => setTextColor(hex)\r\n    const handleBackgroundColorChange = ({ hex }) => setBackgroundColor(hex)\r\n    const onTitleChange = (text) => setTitle(text);\r\n\r\n    return (\r\n        <div className={'container-workspace bg-light rounded-3 shadow d-flex flex-column position-relative'}>\r\n            <div className={'h-640 d-flex justify-content-center align-items-center'}>\r\n                <div className={'h-600 w-350 p-l-20 d-flex flex-column'}>\r\n                    <div className={'h-60 d-flex justify-content-center align-items-center'}>\r\n                        <h3>{TRANSLATIONS[language]['settings']}</h3>\r\n                    </div>\r\n                    <div className={'h-540 overflow-auto'}>\r\n                        <Divider className={'m-t-5'}>{TRANSLATIONS[language]['title']}</Divider>\r\n                        <InputGroup>\r\n                            <InputGroup.Addon>{TRANSLATIONS[language]['title']}</InputGroup.Addon>\r\n                            <Input value={title} onChange={onTitleChange}/>\r\n                        </InputGroup>\r\n                        <Divider className={'m-t-5'}>{TRANSLATIONS[language]['bg_color']}</Divider>\r\n                        <div className={'d-flex justify-content-center'}>\r\n                            <ChromePicker disableAlpha onChange={ handleBackgroundColorChange } color={backgroundColor}/>\r\n                        </div>\r\n                        <Divider className={'m-t-5'}>{TRANSLATIONS[language]['text_color']}</Divider>\r\n                        <div className={'d-flex justify-content-center'}>\r\n                            <ChromePicker disableAlpha onChange={ handleTextColorChange } color={textColor}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'h-600 w-650 d-flex align-items-center justify-content-center'}>\r\n                    <NewsletterView images={images} width={width} showHeaderAndFooter={true} backgroundColor={backgroundColor} textColor={textColor} maxWidth={600} maxHeight={600}/>\r\n                </div>\r\n            </div>\r\n            <div className={'h-60 d-flex justify-content-center align-items-center'}>\r\n                <ButtonGroup>\r\n                    <Button appearance={'ghost'} className={'w-350'} onClick={onBack}>{TRANSLATIONS[language]['back']}</Button>\r\n                    <Button appearance={'primary'} className={'w-350'} onClick={() => onNext(title, textColor, backgroundColor)}>{TRANSLATIONS[language]['next']}</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n            <Help title={TRANSLATIONS[language]['settings']} style={{position: 'absolute', top: 10, left: 10}}>\r\n                <p>{TRANSLATIONS[language]['choose_title_of_newsletter']}</p>\r\n            </Help>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport { Settings };\r\n","import React from 'react';\r\nimport { Button, ButtonGroup } from 'rsuite';\r\nimport { NewsletterView } from '../components/newsletter-view';\r\nimport { TRANSLATIONS } from '../assets/lang';\r\nimport { Help } from '../components/help';\r\n\r\nconst Save = ({images, width, links, textColor, backgroundColor, onSave, onBack, language}) => {\r\n    return (\r\n        <div className={'container-workspace bg-light rounded-3 shadow d-flex flex-column position-relative'}>\r\n            <div className={'h-80 d-flex justify-content-center align-items-center'}>\r\n                <h2>{TRANSLATIONS[language]['overview']}</h2>\r\n            </div>\r\n            <div className={'h-560 d-flex justify-content-center align-items-center'}>\r\n                <NewsletterView images={images} showHeaderAndFooter={true} backgroundColor={backgroundColor} textColor={textColor} width={width} maxWidth={700} maxHeight={550}/>\r\n            </div>\r\n            <div className={'h-60 d-flex justify-content-center align-items-center'}>\r\n                <ButtonGroup>\r\n                    <Button appearance={'ghost'} className={'w-350'} onClick={onBack}>{TRANSLATIONS[language]['back']}</Button>\r\n                    <Button appearance={'primary'} className={'w-350'} onClick={() => onSave()}>{TRANSLATIONS[language]['save']}</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n            <Help title={TRANSLATIONS[language]['overview']} style={{position: 'absolute', top: 10, left: 10}}>\r\n                <p>{TRANSLATIONS[language]['you_can_check']}</p>\r\n                <p>{TRANSLATIONS[language]['if_everything_is_okay']}</p>\r\n            </Help>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport { Save };\r\n","import { saveAs } from 'file-saver';\r\nimport { NEWSLETTER_HTML } from '../assets/constants';\r\nconst zip = require('jszip')();\r\nconst zipUtils = require('jszip-utils');\r\n\r\nconst tryWidth = (width, images) => {\r\n    let i = 0;\r\n    \r\n    while (i < images.length) {\r\n        let currRowWidth = 0;\r\n        let j = i;\r\n\r\n        // skus vytvorit riadok obrazkov\r\n        while (j < images.length && currRowWidth < width) {\r\n            currRowWidth += images[j].width;\r\n            // ak obrazky v riadku nemaju rovnaku vysku\r\n            if (j > i && images[j].height !== images[j-1].height) {\r\n                return false;\r\n            }\r\n            j++;\r\n        }\r\n        \r\n        i = j;\r\n\r\n        if (currRowWidth !== width) {\r\n            return false;\t\r\n        }\r\n    \r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst detectWidths = (images) => {\r\n    // vyskusa najprv v prvom riadku jeden obrazok\r\n    // prejde do druheho, vklada obrazky dokedy nie su cca == doterajsia sirka, \r\n    // ak moc prekrocia skusi v prvom riadku 2 obrazky atd..\r\n    \r\n    let width = 0,\r\n        widths = [],\r\n        i = 0;\r\n\r\n    while (i < images.length) {\r\n        width += images[i].width;\r\n\r\n        // skusi sa zostavit NL s danou sirkou\r\n        if (tryWidth(width, images)) {\r\n            widths.push(width);\r\n        }\r\n\r\n        i++;\r\n    }\r\n\r\n    return widths;\r\n}\r\n\r\nconst createNL = (images, width, links, title, textColor, backgroundColor) => {\r\n    let nImages = images.length,\r\n        i = 0,\r\n        html = `<table role=\"presentation\" cellSpacing=\"0\" cellPadding=\"0\" border=\"0\" width=\"100%\">`;\r\n\r\n    while (i < nImages) {\r\n        html += `<tr><td><table cellSpacing=\"0\" cellPadding=\"0\" border=\"0\"><tr>`;\r\n        let rowWidth = images[i].width;\r\n\r\n        if (rowWidth > width) {\r\n            i++;\r\n        }\r\n\r\n        while (i < nImages && rowWidth <= width) {\r\n            html += `<td>`;\r\n\r\n            if (links[i]) {\r\n                html += `<a href=\"${links[i]}\"><img src=\"images/image${String(i+1).padStart(2, '0')}.jpg\" alt=\"\" width=${images[i].width} style=\"width:100%; max-width:${images[i].width}px; height:auto; display:block;\"></a>`;\r\n            } else {\r\n                html += `<img src=\"images/image${String(i+1).padStart(2, '0')}.jpg\" alt=\"\" width=${images[i].width} style=\"width:100%; max-width:${images[i].width}px; height:auto; display:block;\">`;\r\n            }\r\n\r\n            html += `</td>`;\r\n            i++;\r\n\r\n            if (i < nImages) {\r\n                rowWidth += images[i].width;\r\n            }\r\n        }\r\n        html += `</tr></table></td></tr>`;\r\n    }\r\n\r\n    html += `</table>`;\r\n\r\n    let htmltext = NEWSLETTER_HTML(title, html, backgroundColor, textColor);\r\n\r\n    return htmltext;\r\n}\r\n\r\nconst getDataFromUrl = (url) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tzipUtils.getBinaryContent(url, (err, data) => {\r\n\t\t\tif(err) {\r\n\t\t\t\treject(err);\r\n\t\t\t} else {\r\n\t\t\t\tresolve(data);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\nconst createZip = async (html, images) => {\r\n\tzip.file('index.html', html);\r\n    let imgFolder = zip.folder('images');\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n\t\tlet data = await getDataFromUrl(images[i].src);\r\n\t\timgFolder.file( `image${String(i+1).padStart(2, '0')}.jpg`, data, {binary:true});\r\n\t}\r\n\r\n    zip.generateAsync({type:'blob'}).then((content) => {\r\n\t\tsaveAs(content, 'newsletter.zip');\r\n\t});\r\n}\r\n\r\nexport { detectWidths, createNL, createZip };","import React, { useState } from 'react';\r\nimport { Steps, SelectPicker, Alert } from 'rsuite';\r\nimport { Images } from './screens/images';\r\nimport { Home } from './screens/home';\r\nimport { WidthPicker } from './screens/width-picker';\r\nimport { Links } from './screens/links';\r\nimport { Settings } from './screens/settings';\r\nimport { Save } from './screens/save';\r\nimport { createNL, createZip, detectWidths } from './components/newsletter-controller';\r\nimport { DEFAULT_BACKGROUND_COLOR, DEFAULT_LANGUAGE, DEFAULT_TEXT_COLOR, DEFAULT_TITLE } from './assets/constants';\r\nimport { TRANSLATIONS, LANGUAGES } from './assets/lang';\r\n\r\nexport default function App() {\r\n  const [currentStep, setCurrentStep] = useState(-1);\r\n  const [images, setImages] = useState([]);\r\n  const [links, setLinks] = useState([]);\r\n  const [widths, setWidths] = useState(0);\r\n  const [selectedWidth, setSelectedWidth] = useState([]);\r\n  const [title, setTitle] = useState(DEFAULT_TITLE);\r\n  const [textColor, setTextColor] = useState(DEFAULT_TEXT_COLOR);\r\n  const [backgroundColor, setBackgroundColor] = useState(DEFAULT_BACKGROUND_COLOR);\r\n  const [language, setLanguage] = useState(DEFAULT_LANGUAGE);\r\n\r\n  const onImagesDrop = (images) => {\r\n    let detectedWidths = detectWidths(images);\r\n    if (detectedWidths.length <= 0) {\r\n      Alert.error('Error. Can\\'t make a newsletter from these images. Make sure they are sorted alphabetically', 8000);\r\n      return;\r\n    }\r\n    setImages(images);\r\n    setWidths(detectedWidths);\r\n    setLinks(images.map(e => ''))\r\n    setCurrentStep(currentStep + 1);\r\n  }\r\n\r\n  const onWidthPick = (value) => {\r\n    setSelectedWidth(value);\r\n    setCurrentStep(currentStep + 1);\r\n  }\r\n  \r\n  const onLinksPick = (links) => {\r\n    setLinks(links);\r\n    setCurrentStep(currentStep + 1);\r\n  }\r\n\r\n  const onSettingsPick = (title, textColor, backgroundColor) => {\r\n    setTitle(title);\r\n    setTextColor(textColor);\r\n    setBackgroundColor(backgroundColor);\r\n    setCurrentStep(currentStep + 1);\r\n  }\r\n\r\n  const onSave = () => {\r\n    let html = createNL(images, selectedWidth, links, title, textColor, backgroundColor);\r\n    var prettier = require('js-beautify').html;\r\n    let beautifulHTML = prettier(html);\r\n    createZip(beautifulHTML, images);\r\n    //window.location.reload(false);\r\n  }\r\n\r\n  const onBack = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  }\r\n\r\n  return (     \r\n    <div className={'app'}>\r\n      <SelectPicker\r\n        value={language}\r\n        data={LANGUAGES}\r\n        cleanable={false}\r\n        searchable={false}\r\n        onChange={(value) => {setLanguage(value)}}\r\n        appearance={'subtle'}\r\n        style={{ position: 'absolute', right: 30, top: 0}}\r\n        renderValue={(value) => <img src={`./files/${value}.png`} height={30} alt={`${value}`}/>}\r\n      />\r\n      { currentStep === -1 ? \r\n      <Home \r\n        onNext={() => {\r\n          setCurrentStep(currentStep + 1);\r\n        }}\r\n        language={language}\r\n      /> \r\n      : \r\n      <Steps current={currentStep} vertical={true} className={'d-flex flex-column h-700 p-t-120 w-200'}>\r\n        <Steps.Item title={TRANSLATIONS[language]['drop_images']} />\r\n        <Steps.Item title={TRANSLATIONS[language]['pick_width']} />\r\n        <Steps.Item title={TRANSLATIONS[language]['paste_links']} />\r\n        <Steps.Item title={TRANSLATIONS[language]['final_settings']} />\r\n        <Steps.Item title={TRANSLATIONS[language]['overview']} />\r\n      </Steps> }\r\n      { currentStep === 0 ?\r\n        // upload images\r\n        <Images \r\n          onNext={onImagesDrop}\r\n          language={language}\r\n        />\r\n      : currentStep === 1 ?\r\n        // pick a width\r\n        <WidthPicker \r\n          images={images} \r\n          widths={widths}\r\n          onNext={onWidthPick}\r\n          onBack={onBack}\r\n          language={language}\r\n        />\r\n      : currentStep === 2 ?\r\n        // set image hrefs\r\n        <Links \r\n          images={images}\r\n          defaultLinks={links} \r\n          width={selectedWidth} \r\n          onNext={onLinksPick}\r\n          onBack={onBack}\r\n          language={language}\r\n        />\r\n      : currentStep === 3 ?\r\n        // final settings\r\n        <Settings\r\n          images={images}\r\n          width={selectedWidth}\r\n          defaultTitle={title}\r\n          defaultTextColor={textColor}\r\n          defaultBackgroundColor={backgroundColor}\r\n          onNext={onSettingsPick}\r\n          onBack={onBack}\r\n          language={language}\r\n        />\r\n      : currentStep === 4 ?\r\n        // overview and save\r\n        <Save \r\n          images={images} \r\n          width={selectedWidth}\r\n          links={links}\r\n          title={title}\r\n          textColor={textColor}\r\n          backgroundColor={backgroundColor}\r\n          onSave={onSave}\r\n          onBack={onBack}\r\n          language={language}\r\n        />\r\n      : null}\r\n    </div>\r\n  );\r\n}","const DEFAULT_LANGUAGE = 'en';\r\nconst DEFAULT_TITLE = 'COOP Newsletter 1.1.2021';\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\nconst DEFAULT_BACKGROUND_COLOR = '#ffffff';\r\n\r\nconst NEWSLETTER_HTML = (title, content, backgroundColor, textColor) => `<!DOCTYPE html><html lang=\"sk\">\r\n<head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n<meta name=\"x-apple-disable-message-reformatting\"><meta name=\"format-detection\" content=\"telephone=no,address=no,email=no,date=no,url=no\"><title>${title}</title>\r\n<style>html, body {margin: 0 auto !important;padding: 0 !important;height: 100% !important;width: 100% !important;}\r\ntable {border-spacing: 0 !important;border-collapse: collapse !important;table-layout: fixed !important;margin: 0 auto !important;}a {text-decoration: none;}\r\n@media only screen and (min-device-width: 320px) and (max-device-width: 374px) {u ~ div .email-container {min-width: 320px !important;}}\r\n@media only screen and (min-device-width: 375px) and (max-device-width: 413px) {u ~ div .email-container {min-width: 375px !important;}}\r\n@media only screen and (min-device-width: 414px) {u ~ div .email-container {min-width: 414px !important;}}</style></head>\r\n<body style=\"width:100%;margin:0;padding:0!important;background-color:${backgroundColor};\"><center aria-roledescription=\"email\" lang=\"sk\" style=\"width:100%;background-color:${backgroundColor};\">\r\n<table align=\"center\" role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"750\" style=\"background-color:${backgroundColor};\">\r\n<tr><td style=\"text-align:center;font-family:arial;font-size:11px;background-color:${backgroundColor};color:${textColor};\">V prípade, že sa vám tento mail nezobrazuje správne, <a href=\"*|ARCHIVE|*\" style=\"text-decoration:underline;color:#7080FF\">kliknite sem</a>.\r\n</td></tr><tr><td>${content}</td></tr><tr><td align=\"center\" valign=\"top\" style=\"padding-top:20px;padding-bottom:20px;\"><br/><br/><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tr>\r\n<td align=\"center\" valign=\"top\" style=\"background-color:${backgroundColor};color:${textColor};font-family:Helvetica,Arial,sans-serif;font-size:11px;line-height:150%;text-align:center;\">\r\nTento email bol zaslaný na <a href=\"mailto:*|EMAIL|*\" target=\"_blank\" style=\"color:#404040 !important;\">*|EMAIL|*</a>\r\n<br/><a href=\"*|ABOUT_LIST|*\" target=\"_blank\" style=\"color:#404040 !important;\"><em>Prečo mi prišiel tento email?</em></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"*|UNSUB|*\" style=\"color:#404040 !important;\">Odhlásiť z noviniek</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"*|UPDATE_PROFILE|*\" style=\"color:#404040 !important;\">\r\nZmeniť nastavenia</a><br/>*|LIST:ADDRESSLINE|*<br/><br/></td></tr></table></td></tr></table></center></body></html>`\r\n\r\nexport { \r\n    DEFAULT_LANGUAGE,\r\n    DEFAULT_TITLE,\r\n    DEFAULT_TEXT_COLOR,\r\n    DEFAULT_BACKGROUND_COLOR,\r\n    NEWSLETTER_HTML\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'rsuite/dist/styles/rsuite-default.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}